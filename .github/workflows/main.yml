# This is a basic workflow to help you get started with Actions

name: Primary CI

# Controls when the action will run.
on:
  # Triggers the workflow on push
  push:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  WEB_IMAGE_PATH: legoguy1000/frc-inventory/web
  SERVER_IMAGE_PATH: legoguy1000/frc-inventory/server

permissions:
  packages: write
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

  # A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-web-image:
    name: Build Web Image
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v4
    - uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push Web Image
      uses: docker/build-push-action@v6
      with:
        context: "./"
        file: "./Dockerfile.web"
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.WEB_IMAGE_PATH }}:${{ github.ref_name }}
  build-server-image:
    name: Build Server Image
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v4
    - uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push Server Image
      uses: docker/build-push-action@v6
      with:
        context: "./server"
        file: "./Dockerfile.server"
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.SERVER_IMAGE_PATH }}:${{ github.ref_name }}
  deploy-dev:
    name: Deploy Development Environment
    if: success() && github.ref_name != github.event.repository.default_branch
    # The type of runner that the job will run on
    runs-on: test
    needs:
      - build-server-image
      - build-web-image
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v4
    - uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Delete current deployment
      if: success() &&  && ${{ contains(github.event.head_commit.message, '/rebuild') }}
      run: |-
        helm uninstall dev-${{ github.ref_name }} -n development --no-hooks --ignore-not-found --wait
    - name: Deploy helm chart
      run: >-
        helm upgrade dev-${{ github.ref_name }} ./helm --install --wait
        -n development -f .ci/dev-values.yaml
        --set web.image.tag=$IMAGE_TAG  --set server.image.tag=$IMAGE_TAG
        --set ingress.host=$HOST_FQDN
      env:
        IMAGE_TAG: ${{ github.ref_name }}
        HOST_FQDN: ${{ github.ref_name }}.dev.${{ secrets.DEPLOYMENT_FQDN }}
  deploy-prod:
    name: Deploy Prod Environment
    if: success() && github.ref_name == github.event.repository.default_branch
    environment:
      name: production
      # url: https://${{ secrets.DEPLOYMENT_FQDN }}
    # The type of runner that the job will run on
    runs-on: test
    needs:
      - build-server-image
      - build-web-image
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v4
    - uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Deploy helm chart
      run: >-
        helm upgrade prod-${{ github.ref_name }} ./helm --install --wait
        -n production -f .ci/dev-values.yaml
        --set web.image.tag=$IMAGE_TAG  --set server.image.tag=$IMAGE_TAG
        --set ingress.host=$HOST_FQDN
      env:
        IMAGE_TAG: ${{ github.ref_name }}
        HOST_FQDN: ${{ secrets.DEPLOYMENT_FQDN }}
