// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id         String   @id @default(uuid())
    first_name String
    last_name  String
    avatar     String   @default("")
    admin      Boolean  @default(false)
    createdAt  DateTime @default(now())
    updatedAt  DateTime @default(now()) @updatedAt
}

model Project {
    id        String      @id @default(uuid())
    name      String
    owner     String?
    retired   Boolean     @default(false)
    inventory Inventory[]
    createdAt DateTime    @default(now())
    updatedAt DateTime    @default(now()) @updatedAt
}

model Part {
    id        String      @id @default(uuid())
    vendor    String
    name      String
    category  String      @default("other")
    location  String
    image_url String      @default("")
    website   String      @default("")
    inventory Inventory[]
    createdAt DateTime    @default(now())
    updatedAt DateTime    @default(now()) @updatedAt

    @@unique([vendor, name])
}

model Inventory {
    id        String    @id @default(uuid())
    purchased DateTime
    retired   DateTime?
    notes     String?
    status    String?
    partId    String
    projectId String?
    part      Part      @relation(fields: [partId], references: [id], onDelete: Restrict)
    project   Project?  @relation(fields: [projectId], references: [id], onDelete: Restrict)
    createdAt DateTime  @default(now())
    updatedAt DateTime  @default(now()) @updatedAt
}
