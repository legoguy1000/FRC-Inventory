apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm.fullname" . }}-server
  labels:
    {{- include "helm.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.server.replicaCount }}
  selector:
    matchLabels:
      {{- include "helm.selectorLabels" . | nindent 6 }}
      service: server
  template:
    metadata:
      {{- with .Values.server.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        service: server
        {{- include "helm.labels" . | nindent 8 }}
        {{- with .Values.server.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.server.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: db-check
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
          command: ["/bin/bash"]
          args:
            - -c
            - |-
              until pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB" -h "$POSTGRES_SERVER" -p "$POSTGRES_PORT" ; do
                echo "Waiting for PostgreSQL to start..."
                sleep 1
              done
              echo "PostgreSQL is ready!"
          env:
            - name: POSTGRES_USER
              value: {{ .Values.postgres.user }}
            - name: POSTGRES_PASS
              value: {{ .Values.postgres.password }}
            - name: POSTGRES_DB
              value: {{ .Values.postgres.db }}
            - name: POSTGRES_PORT
              value: {{ .Values.postgres.port }}
            - name: POSTGRES_SERVER
              value: {{ include "helm.fullname" . }}-postgres
      containers:
        - name: {{ .Chart.Name }}-server
          {{- with .Values.server.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.server.image.repository }}:{{ .Values.server.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.server.image.pullPolicy }}
          env:
            - name: DATABASE_URL
              value: postgresql://{{ .Values.postgres.user }}:{{ .Values.postgres.password }}@{{ include "helm.fullname" . }}-postgres:{{ .Values.postgres.service.port }}/{{ .Values.postgres.db }}?schema=public
            - name: SITE_URL
              value: https://{{ .Values.ingress.host | quote }}
            {{- if .Values.authentication.google.enabled -}}
            - name: GOOGLE_CLIENT_ID
              value: "{{ .Values.authentication.google.clientId | default('') }}"
            - name: GOOGLE_CLIENT_SECRET
              value: "{{ .Values.authentication.google.clientSecret | default('') }}"
              {{- end }}
            - name: JWT_SECRET_KEY
              value: "{{ .Values.server.jwtSecretKey | default('') }}"
          ports:
            - name: http
              containerPort: {{ .Values.server.service.port }}
              protocol: TCP
          {{- with .Values.server.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.server.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.server.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.server.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.server.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
